# 本番用の値を設定する(sbt playGenerateSecretで生成した値をHeroku上の環境変数経由で利用する)
play.http.secret.key = ${PLAY_HTTP_SECRET}
# heroku上にホスティングしたPlayアプリケーションにアクセスするためのフィルタ設定を追加
play.filters.hosts {
  allowed = [".herokuapp.com"]
}

play.filters.headers {
  contentSecurityPolicy = "style-src 'self' 'unsafe-inline' https://maxcdn.bootstrapcdn.com; script-src 'self' 'unsafe-inline' https://maxcdn.bootstrapcdn.com https://ajax.googleapis.com"
}

play.modules {
  enabled += "scalikejdbc.PlayModule"
  enabled += "org.flywaydb.play.PlayModule"
  enabled += "AppModule" // 追加
}

play.i18n {
  langs = ["en", "ja"]
}

db {
  default.migration.locations = ["common", "postgresql"] // 追加する
  default.driver = org.postgresql.Driver // 変更
  default.url = ${JDBC_URL} // 変更
  default.username = ${JDBC_USER_NAME} // 変更
  default.password = ${JDBC_PASSWORD} // 変更

  default.poolInitialSize = 10
  default.poolMaxSize = 10
  default.poolValidationQuery = "select 1 as one"
}

scalikejdbc {
  global {
    loggingSQLAndTime.enabled = true
    loggingSQLAndTime.singleLineMode = true
    loggingSQLAndTime.logLevel = DEBUG
    loggingSQLAndTime.warningEnabled = true
    loggingSQLAndTime.warningThresholdMillis = 5
    loggingSQLAndTime.warningLogLevel = warn
  }
}

password.salt = ${PASSWORD_SALT}

// 楽天APIのホスト
rakuten.endPoint = "app.rakuten.co.jp"
// アプリケーションID
rakuten.applicationId = ${RAKUTEN_APPLICATION_ID}
// アフィリエイトID
rakuten.affiliateId = ${RAKUTEN_AFFILIATE_ID}
// レスポンスを処理する際のタイムアウト時間(sec)
rakuten.timeoutForToStrictInSec = 3

play.filters.csrf.header.bypassHeaders {
  X-Requested-With = "XMLHttpRequest"
  Csrf-Token = "nocheck"
}